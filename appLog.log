2024-11-07 00:00:05,846 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers/13
2024-11-07 00:00:05,849 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:05,849 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:00:05,849 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:05,849 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:05,849 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:05,850 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:05,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:06,029 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:00:06,211 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] delete from drivers where driver_id=?
2024-11-07 00:00:07,133 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:00:07,133 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:07,134 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:07,135 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:07,136 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:07,136 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:07,313 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:08,210 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:08,211 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:08,212 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:08,398 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:00:09,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:00:09,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:09,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:09,492 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:00:24,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:00:24,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:00:24,877 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:00:24,877 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:24,877 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:00:24,877 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:00:24,877 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:00:24,878 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:24,878 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:25,060 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:00:28,554 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:00:28,555 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:00:28,556 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:00:28,557 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:28,557 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:28,746 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:00:29,649 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:00:29,650 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:00:29,651 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:29,651 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:00:29,651 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:00:29,651 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:00:29,652 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:29,652 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:29,830 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:00:37,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:00:37,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:00:37,246 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:37,246 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:37,432 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers/14
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:00:46,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:00:46,370 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:00:46,371 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:00:46,372 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:46,372 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:46,552 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:00:46,733 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] delete from drivers where driver_id=?
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:00:47,668 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:00:47,669 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:47,670 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:47,849 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:48,756 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:48,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:48,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:00:48,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:48,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:48,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:48,775 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:00:48,775 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:00:48,775 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:48,775 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:48,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:48,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:00:48,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:00:48,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:00:48,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:48,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:48,954 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:49,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:00:49,867 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:00:49,867 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:00:49,867 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:49,867 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:49,867 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:49,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:00:49,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:00:49,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:49,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:50,047 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:51,058 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:51,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:00:51,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:00:51,237 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:01:14,847 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:02:50,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:02:50,787 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:02:50,788 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:02:50,975 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:02:54,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:02:54,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:02:54,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:02:54,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:02:54,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:02:54,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:02:54,433 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:02:54,433 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:02:54,433 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:02:54,433 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:02:54,434 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:02:54,613 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:02:55,528 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:02:55,529 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:02:55,530 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:02:55,707 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers/15
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:03:02,563 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:03:02,564 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:03:02,565 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:03:02,565 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:03:02,565 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:03:02,565 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:02,566 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:02,746 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:03:02,925 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] delete from drivers where driver_id=?
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:03:03,827 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:03:03,828 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:03,829 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:04,004 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:03:04,917 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:03:04,918 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:04,919 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:05,096 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:03:06,013 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:03:06,014 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:03:06,015 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:03:06,016 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:06,016 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:06,193 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:03:27,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:03:27,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:03:27,431 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:03:27,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:27,432 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:27,612 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:03:31,073 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:03:31,074 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:03:31,075 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:03:31,076 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:31,076 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:31,255 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:03:32,156 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:03:32,157 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:32,158 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:32,340 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:03:37,893 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:03:37,894 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:03:37,895 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:03:37,896 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:03:37,896 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:03:38,076 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:06:04,142 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:06:04,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:04,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:04,323 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:06:14,854 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:06:17,006 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:06:17,007 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:06:17,008 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:06:17,008 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:06:17,008 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:06:17,008 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:17,009 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:17,189 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers/16
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:06:34,782 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:06:34,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:34,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:34,962 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:06:35,140 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] delete from drivers where driver_id=?
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:06:36,038 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:06:36,039 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:06:36,040 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:06:36,041 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:36,041 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:36,216 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:06:37,118 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:06:37,119 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:37,120 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:37,295 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:06:38,196 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:06:38,196 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:06:38,196 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:06:38,196 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:06:38,196 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:06:38,197 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:06:38,198 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:06:38,199 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:06:38,199 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:06:38,382 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:08:21,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:08:21,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:08:21,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:08:21,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:08:21,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:08:21,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:08:21,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:08:21,760 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:08:21,939 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:08:25,422 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:08:25,423 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:08:25,423 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:25,423 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:08:25,423 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:08:25,423 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:08:25,424 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:08:25,424 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:08:25,424 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:08:25,424 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:08:25,424 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:08:25,425 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:08:25,608 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:08:26,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:08:26,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:08:26,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:08:26,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:08:26,509 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:08:26,509 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:08:26,509 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:08:26,509 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:08:26,510 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:08:26,689 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:08:42,059 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:08:42,060 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:08:42,061 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:08:42,240 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers/17
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:10:16,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:10:16,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:10:16,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:10:16,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:10:16,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:10:16,911 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:10:17,088 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] delete from drivers where driver_id=?
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:10:17,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:10:17,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:10:17,999 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:10:18,176 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:10:19,077 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:10:19,078 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:10:19,079 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:10:19,080 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:10:19,080 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:10:19,257 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:10:20,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:10:20,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:10:20,162 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:10:20,339 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:11:14,856 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:15:02,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:15:02,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:15:02,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:15:02,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:15:02,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:15:02,775 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:15:03,674 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:15:03,675 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:15:03,676 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:15:03,854 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:15:17,402 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:15:17,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:15:17,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:15:17,586 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:15:21,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:15:21,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:15:21,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:15:21,046 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:15:21,046 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:15:21,233 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:15:22,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:15:22,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:15:22,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:15:22,323 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:16:14,857 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:17:30,214 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:17:30,215 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:17:30,216 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:17:30,217 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:17:30,217 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:17:30,392 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers/18
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:18:33,403 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:18:33,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:18:33,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:18:33,578 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:18:33,754 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] delete from drivers where driver_id=?
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:18:34,645 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:18:34,646 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:18:34,647 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:18:34,647 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:18:34,647 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:18:34,647 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:18:34,648 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:18:34,830 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:18:35,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:18:35,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:18:35,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:18:35,898 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:18:36,783 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:18:36,784 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:18:36,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:18:36,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:18:36,786 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:18:36,961 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:19:10,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:19:10,225 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:19:10,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:19:10,404 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:19:13,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:19:13,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:19:13,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:19:13,971 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:19:14,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:19:14,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:19:14,874 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:19:15,051 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:21:14,858 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:26:14,866 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:31:14,879 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:31:18,487 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringApplicationShutdownHook] Unregistering application DRIVER-MICROSERVICE with eureka with status DOWN
2024-11-07 00:31:18,488 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1730950278488, current=DOWN, previous=UP]
2024-11-07 00:31:18,489 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:8e7e192569a5353bb336133192719cb8}: registering service...
2024-11-07 00:31:18,518 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:8e7e192569a5353bb336133192719cb8} - registration status: 204
2024-11-07 00:31:18,665 [INFO] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-07 00:31:18,671 [INFO] com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2024-11-07 00:31:18,673 [INFO] com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2024-11-07 00:31:18,674 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Shutting down DiscoveryClient ...
2024-11-07 00:31:21,680 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Unregistering ...
2024-11-07 00:31:21,697 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:8e7e192569a5353bb336133192719cb8} - deregister  status: 200
2024-11-07 00:31:21,697 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Completed shut down of DiscoveryClient
2024-11-07 00:33:38,542 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] Starting FlotavehicularWebappApplication using Java 21.0.1 with PID 17540 (C:\Users\Jorge\Desktop\Proyecto Flotavehicular- Jorge Candia - copia\flota-vehicular\target\classes started by Jorge in C:\Users\Jorge\Desktop\Proyecto Flotavehicular- Jorge Candia - copia\flota-vehicular)
2024-11-07 00:33:38,543 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-11-07 00:33:39,288 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-07 00:33:39,290 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-07 00:33:39,428 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 131 ms. Found 5 JPA repository interfaces.
2024-11-07 00:33:39,439 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-07 00:33:39,440 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IAssignedOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDriverIncidentsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDrivingHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IPerformanceEvaluationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 00:33:39,452 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-07 00:33:39,678 [INFO] org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=a6d6008a-07e6-317b-969f-17d26d4761e1
2024-11-07 00:33:39,848 [WARN] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-07 00:33:39,851 [WARN] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-07 00:33:40,033 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port 0 (http)
2024-11-07 00:33:40,043 [INFO] org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2024-11-07 00:33:40,043 [INFO] org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-11-07 00:33:40,099 [INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2024-11-07 00:33:40,099 [INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1526 ms
2024-11-07 00:33:40,233 [INFO] org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-07 00:33:40,274 [INFO] org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.5.2.Final
2024-11-07 00:33:40,299 [INFO] org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-11-07 00:33:40,505 [INFO] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-07 00:33:40,524 [INFO] com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-11-07 00:33:42,590 [INFO] com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a80a896
2024-11-07 00:33:42,592 [INFO] com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-11-07 00:33:42,822 [WARN] org.hibernate.orm.deprecation [main] HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-07 00:33:44,280 [INFO] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-07 00:33:45,163 [DEBUG] org.hibernate.SQL [main] alter table if exists driving_history add column car_brand varchar(255)
2024-11-07 00:33:45,342 [DEBUG] org.hibernate.SQL [main] alter table if exists driving_history add column car_plate varchar(255)
2024-11-07 00:33:45,530 [DEBUG] org.hibernate.SQL [main] alter table if exists driving_history add column driver_license varchar(255)
2024-11-07 00:33:45,706 [DEBUG] org.hibernate.SQL [main] alter table if exists driving_history add column driver_name varchar(255)
2024-11-07 00:33:57,084 [INFO] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-07 00:33:57,565 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating cache manager with TTL
2024-11-07 00:33:57,603 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating Redis template
2024-11-07 00:33:57,742 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating cache manager without TTL
2024-11-07 00:33:58,090 [INFO] org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@732f7660, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d525b45, org.springframework.security.web.context.SecurityContextHolderFilter@66373f77, org.springframework.security.web.header.HeaderWriterFilter@6050d04d, org.springframework.web.filter.CorsFilter@3a0afe5b, org.springframework.security.web.authentication.logout.LogoutFilter@2a9464d9, com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter@4cd7d5e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f014f27, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70201785, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@243b8682, org.springframework.security.web.access.ExceptionTranslationFilter@5d71813b, org.springframework.security.web.access.intercept.AuthorizationFilter@34775090]
2024-11-07 00:33:58,546 [INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [main] Eureka HTTP Client uses RestTemplate.
2024-11-07 00:33:58,579 [WARN] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-07 00:33:58,627 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port 62297 (http) with context path '/'
2024-11-07 00:33:58,629 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 62297
2024-11-07 00:33:58,634 [INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2024-11-07 00:33:58,654 [INFO] com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2024-11-07 00:33:58,657 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Application is null : false
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2024-11-07 00:33:58,665 [INFO] com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2024-11-07 00:33:58,928 [INFO] com.netflix.discovery.DiscoveryClient [main] The response status is 200
2024-11-07 00:33:58,929 [INFO] com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2024-11-07 00:33:58,931 [INFO] com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-07 00:33:58,932 [INFO] com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1730950438932 with initial instances count: 3
2024-11-07 00:33:58,936 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DRIVER-MICROSERVICE with eureka with status UP
2024-11-07 00:33:58,937 [INFO] com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1730950438937, current=UP, previous=STARTING]
2024-11-07 00:33:58,938 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:0b46fba2843951f2f5e7467882809125}: registering service...
2024-11-07 00:33:58,947 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] Started FlotavehicularWebappApplication in 20.753 seconds (process running for 21.264)
2024-11-07 00:33:58,966 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:0b46fba2843951f2f5e7467882809125} - registration status: 204
2024-11-07 00:37:33,141 [INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-auto-1-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-07 00:37:33,142 [INFO] org.springframework.web.servlet.DispatcherServlet [http-nio-auto-1-exec-1] Initializing Servlet 'dispatcherServlet'
2024-11-07 00:37:33,144 [INFO] org.springframework.web.servlet.DispatcherServlet [http-nio-auto-1-exec-1] Completed initialization in 2 ms
2024-11-07 00:37:33,160 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers/19
2024-11-07 00:37:33,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:37:33,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:37:33,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:37:33,161 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:37:33,166 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:37:33,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:37:33,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:33,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:37:33,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:37:33,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:37:33,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:37:33,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:37:33,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:37:33,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:37:33,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:37:33,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:33,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:37:33,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:37:33,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:37:33,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:37:33,186 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:37:33,422 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,u1_0.id,u1_0.account_non_locked,u1_0.created_at,u1_0.date_of_birth,u1_0.email,u1_0.enabled,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.updated_at,u1_0.username,r1_0.users_id,r1_1.id,r1_1.created_at,r1_1.name,r1_1.updated_at from drivers d1_0 left join users u1_0 on u1_0.id=d1_0.user_id left join users_roles r1_0 on u1_0.id=r1_0.users_id left join role r1_1 on r1_1.id=r1_0.roles_id where d1_0.driver_id=?
2024-11-07 00:37:33,640 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] delete from drivers where driver_id=?
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:37:34,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:37:34,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:37:34,834 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:37:34,834 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:37:34,834 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:37:34,834 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:37:34,835 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:34,835 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:37:34,835 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:37:34,835 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:37:34,836 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:37:34,836 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:37:35,077 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:37:35,992 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:37:35,994 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:37:35,995 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:35,995 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:37:35,995 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:37:35,995 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:37:35,995 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:37:35,996 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:37:35,996 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:37:35,996 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:37:35,996 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:37:35,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:35,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:37:35,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:37:35,997 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:37:35,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:37:35,998 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:37:36,175 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:37:37,088 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:37:37,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:37:37,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:37:37,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:37:37,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:37:37,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:37:37,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:37:37,271 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:37:50,540 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:37:50,540 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:37:50,541 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:37:50,541 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:37:50,541 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:37:50,541 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:37:50,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:37:50,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:37:50,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:37:50,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:37:50,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:37:50,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:37:50,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:37:50,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:37:50,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:37:50,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:37:50,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:37:50,724 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:38:08,793 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:38:08,794 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:38:08,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:38:08,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:38:08,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:38:08,795 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:38:08,796 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:08,796 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:38:08,796 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:38:08,796 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:38:08,797 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:38:08,797 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:38:09,010 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select nextval('drivers_seq')
2024-11-07 00:38:09,378 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:38:12,426 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:38:12,427 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:38:12,427 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:38:12,427 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:38:12,427 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:38:12,427 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:38:12,428 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:38:12,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:12,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:38:12,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:38:12,429 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:38:12,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:38:12,430 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:38:12,612 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM3ODU3LCJleHAiOjE3MzEwMjQyNTcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.54k9ilRNPnHqlNTnjD2pzvPHGD4Pl6vMmJjjjPP9FVU
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:38:13,499 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:38:13,500 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:38:13,501 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:38:13,501 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:38:13,501 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:38:13,501 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:38:13,501 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:38:13,502 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:38:13,502 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:38:13,502 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:38:13,502 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:38:13,502 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:38:13,684 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:38:58,667 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:39:06,174 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:39:06,176 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:39:06,177 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:39:06,177 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:39:06,177 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:39:06,177 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:39:06,178 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:39:06,357 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:40:16,586 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:40:16,587 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:40:16,587 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:40:16,588 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:40:16,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:16,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:40:16,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:40:16,589 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:40:16,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:40:16,590 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:40:16,771 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:40:17,659 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:40:17,660 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:40:17,661 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:40:17,662 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:40:17,662 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:40:17,840 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:40:49,473 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:40:49,474 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:40:49,474 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:40:49,474 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:40:49,474 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:40:49,474 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:40:49,475 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:40:49,476 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:40:49,476 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:40:49,476 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:40:49,476 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:40:49,477 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:40:49,660 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:40:52,504 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:40:52,505 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:40:52,506 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:40:52,506 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:40:52,506 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:40:52,506 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:40:52,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:52,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:40:52,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:40:52,507 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:40:52,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:40:52,508 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:40:52,687 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:40:53,591 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:40:53,592 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:40:53,593 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:40:53,593 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:40:53,593 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:40:53,593 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:40:53,594 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:40:53,594 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:40:53,594 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:40:53,594 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:40:53,595 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:40:53,595 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:40:53,774 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:42:35,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:42:35,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:42:35,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:42:35,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:42:35,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:42:35,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:42:35,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:42:35,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:35,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:42:35,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:42:35,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:42:35,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:42:35,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:42:35,933 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:42:54,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:42:54,276 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:42:54,277 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:54,277 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:42:54,277 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:42:54,277 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:42:54,278 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:42:54,278 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:42:54,458 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:42:57,318 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:42:57,318 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:42:57,319 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:42:57,319 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:42:57,319 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:42:57,319 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:42:57,320 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:42:57,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:57,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:42:57,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:42:57,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:42:57,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:42:57,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:42:57,505 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:42:58,404 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:42:58,405 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:42:58,406 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:42:58,406 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:42:58,406 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:42:58,406 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:42:58,407 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:42:58,583 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:34,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 00:43:34,726 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:34,726 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:43:34,726 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:43:34,726 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:43:34,726 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:43:34,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:34,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:34,910 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:43:38,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:43:38,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:43:38,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:43:38,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:43:38,740 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:38,740 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:38,925 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:43:40,716 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:43:40,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:43:40,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:43:40,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:43:40,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:43:40,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:40,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:40,901 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:43:46,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:43:46,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:43:46,739 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:43:46,740 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:46,740 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:46,931 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:48,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:43:48,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:48,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:43:48,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:43:48,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:43:48,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:43:48,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:43:48,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:48,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:43:48,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:43:48,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:43:48,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:48,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:48,906 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:53,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:43:53,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:53,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:43:53,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:43:53,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:43:53,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:43:53,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:43:53,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:43:53,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:43:53,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:43:53,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:53,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:53,929 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:43:54,830 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:43:54,831 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:43:54,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:43:54,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:43:54,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:43:54,832 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:54,833 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:55,011 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:43:57,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:43:57,720 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 00:43:57,721 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:43:57,902 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:43:58,668 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:44:24,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:44:24,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:44:24,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:44:24,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:44:24,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:44:24,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 00:44:24,738 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:44:24,917 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:44:27,776 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:44:27,777 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:44:27,778 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:44:27,778 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:44:27,778 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:44:27,778 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 00:44:27,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:44:27,959 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:44:28,851 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:44:28,852 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:44:28,853 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:44:28,854 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 00:44:28,854 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:44:29,030 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:44:44,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:44:44,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:44:44,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:44:44,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 00:44:44,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:44:44,911 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:47:00,306 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:47:00,307 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:47:00,308 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:47:00,309 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 00:47:00,309 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:47:00,487 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:47:37,235 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:47:37,236 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:47:37,237 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:47:37,237 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 00:47:37,237 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 00:47:37,237 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:47:37,237 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 00:47:37,238 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:47:37,419 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:47:40,312 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:47:40,313 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 00:47:40,314 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:47:40,495 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:47:41,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:47:41,397 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 00:47:41,398 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 00:47:41,399 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 00:47:41,399 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:47:41,576 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:48:58,677 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:49:45,360 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:49:45,361 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:49:45,362 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:51:27,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:51:27,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:51:27,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 00:51:27,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 00:51:27,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:51:27,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:51:27,958 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:51:54,603 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:51:54,604 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 00:51:54,605 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 00:51:54,606 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:51:54,606 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:52:51,976 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:52:51,977 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:52:51,978 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:52:52,164 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:53:06,226 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:53:06,227 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 00:53:06,228 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 00:53:06,229 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 00:53:06,229 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 00:53:06,412 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:53:15,700 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:53:15,701 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 00:53:15,702 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 00:53:15,703 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:53:15,703 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 00:53:15,882 [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-auto-1-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.proyecto.flotavehicular_webapp.models.Driver.Driver.user -> com.proyecto.flotavehicular_webapp.models.Security.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:173)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:152)
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:102)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:77)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.services.Impl.IDriverServiceImpl$$SpringCGLIB$$0.saveDriver(<generated>)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController.saveDriver(DriverController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration$DeferringMethodInterceptor.invoke(PrePostMethodSecurityConfiguration.java:200)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.proyecto.flotavehicular_webapp.controllers.DriverController$$SpringCGLIB$$0.saveDriver(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 00:53:58,679 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 00:58:58,682 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:02:32,867 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringApplicationShutdownHook] Unregistering application DRIVER-MICROSERVICE with eureka with status DOWN
2024-11-07 01:02:32,867 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1730952152867, current=DOWN, previous=UP]
2024-11-07 01:02:32,867 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:0b46fba2843951f2f5e7467882809125}: registering service...
2024-11-07 01:02:32,896 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:0b46fba2843951f2f5e7467882809125} - registration status: 204
2024-11-07 01:02:33,020 [INFO] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-07 01:02:33,021 [INFO] com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2024-11-07 01:02:33,024 [INFO] com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2024-11-07 01:02:33,025 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Shutting down DiscoveryClient ...
2024-11-07 01:02:36,029 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Unregistering ...
2024-11-07 01:02:36,045 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:0b46fba2843951f2f5e7467882809125} - deregister  status: 200
2024-11-07 01:02:36,045 [INFO] com.netflix.discovery.DiscoveryClient [SpringApplicationShutdownHook] Completed shut down of DiscoveryClient
2024-11-07 01:08:33,502 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] Starting FlotavehicularWebappApplication using Java 21.0.1 with PID 15328 (C:\Users\Jorge\Desktop\Proyecto Flotavehicular- Jorge Candia - copia\flota-vehicular\target\classes started by Jorge in C:\Users\Jorge\Desktop\Proyecto Flotavehicular- Jorge Candia - copia\flota-vehicular)
2024-11-07 01:08:33,504 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-11-07 01:08:34,231 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-07 01:08:34,233 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-07 01:08:34,352 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 113 ms. Found 5 JPA repository interfaces.
2024-11-07 01:08:34,364 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-07 01:08:34,365 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-07 01:08:34,377 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IAssignedOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 01:08:34,377 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDriverIncidentsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 01:08:34,377 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 01:08:34,377 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IDrivingHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 01:08:34,378 [INFO] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.proyecto.flotavehicular_webapp.repositories.IPerformanceEvaluationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-07 01:08:34,378 [INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-07 01:08:34,595 [INFO] org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=a6d6008a-07e6-317b-969f-17d26d4761e1
2024-11-07 01:08:34,750 [WARN] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-07 01:08:34,753 [WARN] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-07 01:08:34,935 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port 0 (http)
2024-11-07 01:08:34,944 [INFO] org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2024-11-07 01:08:34,944 [INFO] org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-11-07 01:08:35,008 [INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2024-11-07 01:08:35,008 [INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1475 ms
2024-11-07 01:08:35,151 [INFO] org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-07 01:08:35,194 [INFO] org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.5.2.Final
2024-11-07 01:08:35,219 [INFO] org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-11-07 01:08:35,424 [INFO] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-07 01:08:35,443 [INFO] com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-11-07 01:08:37,418 [INFO] com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d3546f9
2024-11-07 01:08:37,424 [INFO] com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-11-07 01:08:37,622 [WARN] org.hibernate.orm.deprecation [main] HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-07 01:08:39,061 [INFO] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-07 01:08:50,491 [INFO] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-07 01:08:51,015 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating cache manager with TTL
2024-11-07 01:08:51,054 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating Redis template
2024-11-07 01:08:51,197 [INFO] com.proyecto.flotavehicular_webapp.config.CacheConfig [main] Creating cache manager without TTL
2024-11-07 01:08:51,565 [INFO] org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d81b90a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@635791b7, org.springframework.security.web.context.SecurityContextHolderFilter@c82f6bd, org.springframework.security.web.header.HeaderWriterFilter@6be93728, org.springframework.web.filter.CorsFilter@48ac4201, org.springframework.security.web.authentication.logout.LogoutFilter@3a1eb893, com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter@77ce88c4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f77917c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ba0c0e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f2bec99, org.springframework.security.web.access.ExceptionTranslationFilter@56313529, org.springframework.security.web.access.intercept.AuthorizationFilter@2db27b46]
2024-11-07 01:08:51,994 [INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [main] Eureka HTTP Client uses RestTemplate.
2024-11-07 01:08:52,030 [WARN] org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-07 01:08:52,082 [INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port 64106 (http) with context path '/'
2024-11-07 01:08:52,083 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 64106
2024-11-07 01:08:52,087 [INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2024-11-07 01:08:52,108 [INFO] com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2024-11-07 01:08:52,111 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Application is null : false
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2024-11-07 01:08:52,119 [INFO] com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2024-11-07 01:08:52,418 [INFO] com.netflix.discovery.DiscoveryClient [main] The response status is 200
2024-11-07 01:08:52,419 [INFO] com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2024-11-07 01:08:52,421 [INFO] com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-07 01:08:52,423 [INFO] com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1730952532422 with initial instances count: 3
2024-11-07 01:08:52,427 [INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DRIVER-MICROSERVICE with eureka with status UP
2024-11-07 01:08:52,428 [INFO] com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1730952532428, current=UP, previous=STARTING]
2024-11-07 01:08:52,429 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:aa0a27f680a36c740465a9761efff715}: registering service...
2024-11-07 01:08:52,437 [INFO] com.proyecto.flotavehicular_webapp.FlotavehicularWebappApplication [main] Started FlotavehicularWebappApplication in 19.256 seconds (process running for 19.765)
2024-11-07 01:08:52,458 [INFO] com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-%d] DiscoveryClient_DRIVER-MICROSERVICE/driver-microservice:aa0a27f680a36c740465a9761efff715} - registration status: 204
2024-11-07 01:09:43,282 [INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-auto-1-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-07 01:09:43,282 [INFO] org.springframework.web.servlet.DispatcherServlet [http-nio-auto-1-exec-1] Initializing Servlet 'dispatcherServlet'
2024-11-07 01:09:43,283 [INFO] org.springframework.web.servlet.DispatcherServlet [http-nio-auto-1-exec-1] Completed initialization in 1 ms
2024-11-07 01:09:43,299 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:09:43,299 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 01:09:43,299 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:09:43,299 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:09:43,299 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:09:43,305 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:09:43,321 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:09:43,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:09:43,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:09:43,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:09:43,322 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:09:43,327 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:09:43,327 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:09:43,327 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:09:43,327 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:09:43,328 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:09:43,329 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:09:43,574 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select nextval('drivers_seq')
2024-11-07 01:09:43,774 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers/102
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:10:09,438 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:10:09,440 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:10:09,441 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:10:09,442 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:10:09,442 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:10:09,647 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 where d1_0.driver_id=?
2024-11-07 01:10:09,830 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] delete from drivers where driver_id=?
2024-11-07 01:10:55,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:10:55,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:10:55,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:10:55,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:10:55,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:10:55,869 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:10:55,870 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:10:55,871 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:10:55,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:10:55,872 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:10:57,755 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:10:57,757 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:10:57,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 01:10:57,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:10:57,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:10:57,758 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 01:10:57,759 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:10:58,012 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:10:58,920 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:10:58,921 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:10:58,922 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 01:10:58,922 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:10:58,922 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:10:58,922 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 01:10:58,923 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:10:59,118 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:11:16,179 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 01:11:16,179 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:11:16,179 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:11:16,180 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:11:16,180 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:11:16,180 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:11:16,181 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:11:16,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:11:16,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 01:11:16,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:11:16,363 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:11:59,863 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 01:11:59,864 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:11:59,864 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:11:59,864 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:11:59,864 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:11:59,864 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:11:59,865 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:11:59,866 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:11:59,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:11:59,868 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:12:00,047 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:12:00,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:12:00,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:12:00,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:12:00,952 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 01:12:00,952 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:12:01,132 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:12:33,101 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:12:33,102 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:12:33,103 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 01:12:33,103 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:12:33,104 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:12:33,104 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:12:33,104 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:33,104 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 01:12:33,104 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:12:33,105 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:12:33,105 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 01:12:33,105 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:12:33,284 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:12:34,143 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:12:34,144 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:12:34,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:12:34,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:12:34,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:12:34,145 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:12:34,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:12:34,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:12:34,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:12:34,146 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:12:34,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:12:34,147 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:12:34,321 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:13:52,122 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:14:07,491 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:14:07,492 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:14:07,493 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:14:07,494 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:14:07,494 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:14:10,541 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:14:10,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:14:10,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:14:10,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:14:10,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:14:10,542 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:14:10,543 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:14:10,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:10,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:14:10,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:14:10,544 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:14:10,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:14:10,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:14:10,722 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:14:11,622 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 01:14:11,623 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:14:11,623 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:14:11,623 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:14:11,623 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:14:11,623 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:14:11,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:14:11,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:14:11,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 01:14:11,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:14:11,801 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:15:33,953 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:15:33,954 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:15:33,955 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:15:33,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:15:33,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:33,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 01:15:33,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:15:33,956 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:15:33,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 01:15:33,957 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:15:35,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:15:35,971 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:15:35,972 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:15:35,973 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:15:35,973 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:15:36,150 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:15:37,042 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:15:37,043 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:15:37,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:15:37,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:15:37,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:15:37,044 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:15:37,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:15:37,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:15:37,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:15:37,045 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:15:37,046 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 01:15:37,046 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:15:37,221 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:18:19,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:18:19,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:18:19,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:18:19,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:18:19,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:18:19,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:18:19,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:18:19,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:18:19,551 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:18:19,551 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:18:19,729 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:18:42,365 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:18:42,366 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:18:42,367 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:18:42,368 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:42,368 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:18:42,368 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:18:42,368 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:18:42,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 01:18:42,369 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:18:42,547 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:18:45,966 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:18:45,967 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:18:45,968 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:18:45,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:45,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:18:45,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:18:45,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:18:45,969 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:18:45,970 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:18:46,146 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:18:47,066 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:18:47,066 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:18:47,067 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:18:47,067 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:18:47,067 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:18:47,067 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:18:47,068 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:18:47,069 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:47,069 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:18:47,069 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:18:47,069 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:18:47,070 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:18:47,070 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:18:47,243 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:18:52,131 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:18:57,243 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:18:57,244 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:18:57,245 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:18:57,246 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 01:18:57,246 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:18:57,424 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:20:41,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:20:41,627 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:20:41,628 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:20:41,629 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 01:20:41,629 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:20:41,805 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:20:42,711 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:20:42,712 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:20:42,713 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:20:42,714 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:20:42,714 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:20:42,889 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers/103
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwNzY3LCJleHAiOjE3MzEwMzcxNjcsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iLCJST0xFX0RSSVZFUiJdfQ.j6X5eB6fGikyCjxlHuSJuQumRyF-bmepI78W7B2tcVQ
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:21:01,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:21:01,549 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:21:01,550 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:21:01,551 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:21:01,551 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN, ROLE_DRIVER]
2024-11-07 01:21:01,726 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 where d1_0.driver_id=?
2024-11-07 01:21:01,902 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] delete from drivers where driver_id=?
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:21:18,182 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:21:18,183 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:21:18,184 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:21:18,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 01:21:18,185 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:21:18,363 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:21:19,272 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:21:19,273 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:21:19,274 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:21:19,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:21:19,275 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:21:19,450 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:21:37,907 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:21:37,908 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 01:21:37,909 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:21:38,088 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:21:41,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:21:41,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:21:41,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:21:41,748 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:21:41,748 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:21:41,933 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:21:42,838 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:21:42,839 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:21:42,840 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:21:42,841 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:21:42,841 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:21:43,021 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:22:54,031 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:22:54,032 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 01:22:54,033 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:22:54,209 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:23:52,143 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:24:03,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:24:03,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:24:03,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:24:03,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:24:03,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:24:03,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:24:03,910 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:24:10,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:24:10,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:24:10,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:24:10,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:24:10,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 01:24:10,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:24:10,907 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:24:14,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:24:14,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:24:14,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:24:14,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 01:24:14,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:24:14,913 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:24:36,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:24:36,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:24:36,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:24:36,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:24:36,734 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:24:36,913 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:25:20,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:25:20,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:25:20,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:25:20,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 01:25:20,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:25:20,926 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:25:55,742 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:25:55,743 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:25:55,744 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:25:55,922 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:26:08,727 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:26:08,728 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:26:08,729 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:26:08,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:08,730 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:08,905 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:26:11,731 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:26:11,732 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:11,733 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:11,917 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:26:13,745 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:26:13,746 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:26:13,747 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:26:13,748 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:13,748 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:13,926 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:26:16,735 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:26:16,736 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:16,737 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:16,922 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:22,722 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:26:22,723 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:26:22,724 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:26:22,724 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:26:22,724 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:26:22,724 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:22,725 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:22,901 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers/104
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:26:31,515 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:26:31,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:31,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:31,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:26:31,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:26:31,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:26:31,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:26:31,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:26:31,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:26:31,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:26:31,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:31,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:31,705 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 where d1_0.driver_id=?
2024-11-07 01:26:31,882 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] delete from drivers where driver_id=?
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:26:32,779 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:26:32,780 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:26:32,781 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:32,781 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 01:26:32,781 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:26:32,781 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:26:32,781 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:32,785 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:32,964 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:26:33,873 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:26:33,875 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:33,876 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:34,053 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:26:34,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:26:34,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:34,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:35,126 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:26:38,764 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:26:38,765 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:26:38,765 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:26:38,765 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:26:38,765 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:26:38,766 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:26:38,944 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:27:03,948 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:27:03,949 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:27:03,950 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:27:03,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:03,951 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:04,132 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] insert into drivers (driver_license,driver_license_expiration_date,driver_name,driver_state,user_id,driver_id) values (?,?,?,?,?,?)
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Incoming request: /api/v1/drivers
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:27:07,545 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting username from token
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:27:07,546 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Checking if token is expired
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting claim from token
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Extracting roles from token
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Parsing JWT token
2024-11-07 01:27:07,547 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Decoding secret key
2024-11-07 01:27:07,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-4] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:07,548 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-4] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:07,728 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-4] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Incoming request: /api/v1/drivers
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:27:08,624 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting username from token
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Checking if token is expired
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting claim from token
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:27:08,625 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Extracting roles from token
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Parsing JWT token
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Decoding secret key
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-5] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:08,626 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-5] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:08,811 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-5] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Incoming request: /api/v1/drivers
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:27:15,575 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting username from token
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Checking if token is expired
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting claim from token
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:27:15,576 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:27:15,577 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:15,577 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Extracting roles from token
2024-11-07 01:27:15,577 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Parsing JWT token
2024-11-07 01:27:15,577 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Decoding secret key
2024-11-07 01:27:15,578 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-6] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:15,578 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-6] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:15,756 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-6] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Incoming request: /api/v1/drivers/105
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:27:35,090 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting username from token
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Checking if token is expired
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting claim from token
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:27:35,091 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Extracting roles from token
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Parsing JWT token
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Decoding secret key
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-7] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:35,092 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-7] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:35,312 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 where d1_0.driver_id=?
2024-11-07 01:27:35,487 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-7] delete from drivers where driver_id=?
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Incoming request: /api/v1/drivers
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:27:36,393 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting username from token
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:27:36,394 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Checking if token is expired
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting claim from token
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Extracting roles from token
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Parsing JWT token
2024-11-07 01:27:36,395 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Decoding secret key
2024-11-07 01:27:36,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-8] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:36,396 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-8] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:36,570 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-8] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Incoming request: /api/v1/drivers
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:27:37,455 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting username from token
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Checking if token is expired
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting claim from token
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:27:37,456 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Extracting roles from token
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Parsing JWT token
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Decoding secret key
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-9] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:37,457 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-9] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:37,631 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-9] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Incoming request: /api/v1/drivers
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:27:38,516 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting username from token
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Checking if token is expired
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting claim from token
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:27:38,517 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Extracting roles from token
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Parsing JWT token
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Decoding secret key
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-10] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:38,518 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-10] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:38,703 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-10] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Incoming request: /api/v1/drivers
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTM2OTE2LCJleHAiOjE3MzEwMjMzMTYsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.yDLlLMlOlZnPXG1XCrbZTrWoYp-huYmv3-thO3RY3Zg
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:27:56,221 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting username from token
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:27:56,222 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Checking if token is expired
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting claim from token
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Extracting roles from token
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Parsing JWT token
2024-11-07 01:27:56,223 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Decoding secret key
2024-11-07 01:27:56,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-1] Roles found: [ROLE_ADMIN]
2024-11-07 01:27:56,224 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-1] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:27:56,401 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-1] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Incoming request: /api/v1/drivers
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:28:21,633 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting username from token
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Checking if token is expired
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting claim from token
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:28:21,634 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Extracting roles from token
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Parsing JWT token
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Decoding secret key
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-2] Roles found: [ROLE_ADMIN]
2024-11-07 01:28:21,635 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-2] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:28:21,814 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-2] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Incoming request: /api/v1/drivers
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJmdWxsTmFtZSI6IkdvbnphIE1hcmVjb3MiLCJzdWIiOiJjcmlzdGhpYW5tYXJlY2NvczIyMjJAZ21haWwuY29tIiwiaWF0IjoxNzMwOTUwODAxLCJleHAiOjE3MzEwMzcyMDEsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXX0.bVxhQlf8JTmts4g4yaGVJ-kYD57agyyYN0soX3eQE7U
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:28:22,717 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Username extracted from token: cristhianmareccos2222@gmail.com
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Validating token for user: cristhianmareccos2222@gmail.com
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting username from token
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Checking if token is expired
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting claim from token
2024-11-07 01:28:22,718 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Token is valid for user: cristhianmareccos2222@gmail.com
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Extracting roles from token
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Parsing JWT token
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Decoding secret key
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtService [http-nio-auto-1-exec-3] Roles found: [ROLE_ADMIN]
2024-11-07 01:28:22,719 [INFO] com.proyecto.flotavehicular_webapp.config.JwtAuthenticationFilter [http-nio-auto-1-exec-3] Roles extracted from token: [ROLE_ADMIN]
2024-11-07 01:28:22,896 [DEBUG] org.hibernate.SQL [http-nio-auto-1-exec-3] select d1_0.driver_id,d1_0.driver_license,d1_0.driver_license_expiration_date,d1_0.driver_name,d1_0.driver_state,d1_0.user_id from drivers d1_0 offset ? rows fetch first ? rows only
2024-11-07 01:28:52,151 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:33:52,163 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:38:52,166 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:43:52,173 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:48:52,174 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:53:52,186 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 01:58:52,198 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:03:52,199 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:08:52,205 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:13:52,221 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:18:52,233 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:23:52,238 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:28:52,254 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:33:52,266 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:38:52,273 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:43:52,288 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:48:52,295 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:53:52,296 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 02:58:52,308 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:03:52,309 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:08:52,314 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:13:52,320 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:18:52,332 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:23:52,336 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:28:52,339 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:33:52,354 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:38:52,358 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:43:52,364 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:48:52,364 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:53:52,372 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 03:58:52,380 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:03:52,389 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:08:52,398 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:13:52,411 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:18:52,415 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:23:52,429 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:28:52,431 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:33:52,432 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:38:52,444 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:43:52,457 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:48:52,470 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:53:52,482 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 04:58:52,487 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:03:52,497 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:08:52,498 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:13:52,500 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:18:52,502 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:23:52,515 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:28:52,519 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:33:52,535 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:38:52,546 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:43:52,549 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:48:52,552 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:53:52,557 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 05:58:52,565 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:03:52,580 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:08:52,587 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:13:52,588 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:18:52,588 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:23:52,589 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:28:52,605 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:33:52,606 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:38:52,608 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:43:52,620 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:48:52,628 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:53:52,637 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 06:58:52,650 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:03:52,666 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:08:52,668 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:13:52,677 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:18:52,692 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:23:52,699 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:28:52,705 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:33:52,716 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:38:52,722 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:43:52,729 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:48:52,739 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:53:52,749 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 07:58:52,760 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:03:52,761 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:08:52,775 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:13:52,783 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:18:52,784 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:23:52,785 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:28:52,794 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:33:52,795 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:38:52,809 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:43:52,821 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:48:52,829 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:53:52,839 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 08:58:52,841 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:03:52,850 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:08:52,861 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:13:52,862 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:18:52,872 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:23:52,878 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:28:52,892 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:33:52,900 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:38:52,911 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:43:52,913 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
2024-11-07 09:48:52,920 [INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-%d] Resolving eureka endpoints via configuration
